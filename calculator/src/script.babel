class Calculator extends React.Component {
  constructor(props) {
    super(props)
  }
  render() {
    return(
      <div id="calc">
        <Interface />
      </div>
    )
  }
}
class Display extends React.Component {
  constructor(props) {
    super(props)
  }
  render() {
    return(
      <div className="row no-gutters text-right">
        <div id="display" className="col-sm-11">
          {this.props.result}
        </div>
      </div>
    )
  }
}

class Interface extends React.Component {
  constructor(props) {
    super(props)
    this.state = {
      currentValue: null,
      prevValue: '0',
      operator: '',
      result: '0'
    }
    this.handleNumber = this.handleNumber.bind(this);
    this.handleReset = this.handleReset.bind(this);
    this.handleOperator = this.handleOperator.bind(this);
    this.answer = this.answer.bind(this);
    this.handleEqual = this.handleEqual.bind(this);
    this.handleDecimal = this.handleDecimal.bind(this);
    this.rounded = this.rounded.bind(this);
  }
  handleReset() {
    this.setState({
      currentValue: null,
      prevValue: '0',
      operator: '',
      result: '0'
    })
  }
  rounded(n) {
    return Math.round(n * 10000)/10000;
}
  handleNumber(e) {
    if (this.state.currentValue === null || this.state.currentValue == '0') {
      this.setState({
        currentValue: e.target.textContent,
        result: e.target.textContent
      })
    } else if (this.state.currentValue.length >= 15) {
      this.setState({
        currentValue: this.state.currentValue,
        result: this.state.currentValue
      })
    } else if(this.state.currentValue === '0' &&  e.target.textContent === '0') {
      this.setState({
        currentValue: this.state.currentValue
      })    
    }else {
      this.setState({
        currentValue: this.state.currentValue + e.target.textContent,
        result: this.state.currentValue + e.target.textContent
      })
    }
  }
  answer(val1, val2, operator){
    if(operator === '+'){return +(val1) + +(val2);}
    if(operator === '-'){return val1 - val2;}
    if(operator === '*'){return val1 * val2;}
    if(operator === '/'){return val1 / val2;}
  }
  handleOperator(e) {
    if (this.state.operator == '') {
      this.setState({
        currentValue: null,
        prevValue: this.state.currentValue,
        operator: e.target.textContent
      })
    } else if(this.state.operator !== '' && this.state.currentValue === null) {
         this.setState({
           operator: e.target.textContent
         })     
    } else {
      this.setState({
        currentValue: null,
        prevValue: this.answer(this.state.prevValue, this.state.currentValue, this.state.operator),
        operator: e.target.textContent,
        result: this.rounded(this.answer(this.state.prevValue, this.state.currentValue, this.state.operator))
      })
    }    
  }
  handleEqual() {
    if(this.state.operator == '') {
      this.setState({
        result: this.state.currentValue
      })
    } else if(this.state.operator != '' && this.state.currentValue === null) {
      this.setState({
        result: this.state.prevValue
      })
    } else {
      this.setState({
        currentValue: this.rounded(this.answer(this.state.prevValue, this.state.currentValue, this.state.operator)),
        prevValue: '0',
        operator: '',
        result: this.rounded(this.answer(this.state.prevValue, this.state.currentValue, this.state.operator)) 
      })
    }
  }
  handleDecimal(e) {
    var reg = /\./;
    if(reg.test(this.state.currentValue)) {
      this.setState({
        currentValue: this.state.currentValue
      })
    } else {
      this.setState({
        currentValue: this.state.currentValue + e.target.textContent,
        result: this.state.currentValue + e.target.textContent
      })
    }
}
  render() {
    return(
      <div className="container">
          <Display result={this.state.result} />
        <div className="row no-gutters text-center">
          <div className="col-sm-3" id="clear"><button className="btn btn-danger" id="clear" onClick={this.handleReset}>AC</button>
          </div>
          <div className="col-sm-3" id="clear"><button className="btn btn-danger" id="reset">CE</button>
          </div>
          <div className="col-sm-3"><button className="btn btn-dark">%</button>
          </div>
          <div className="col-sm-3" id="divide"><button className="btn btn-dark" id="divide" onClick={this.handleOperator}>/</button>
          </div>
        </div>
        <div className="row no-gutters text-center">
          <div className="col-sm"><button className="btn btn-dark" id="seven" onClick={this.handleNumber}>7</button>
          </div>
          <div className="col-sm"><button className="btn btn-dark" id="eight" onClick={this.handleNumber}>8</button>
          </div>
          <div className="col-sm"><button className="btn btn-dark" id="nine" onClick={this.handleNumber}>9</button>
          </div>
          <div className="col-sm"><button className="btn btn-dark" id="multiply" onClick={this.handleOperator}>*</button>
          </div>
        </div>
        <div className="row no-gutters text-center">
          <div className="col-sm"><button className="btn btn-dark" id="four" onClick={this.handleNumber}>4</button>
          </div>
          <div className="col-sm"><button className="btn btn-dark" id="five" onClick={this.handleNumber}>5</button>
          </div>
          <div className="col-sm"><button className="btn btn-dark" id="six" onClick={this.handleNumber}>6</button>
          </div>
          <div className="col-sm"><button className="btn btn-dark" id="subtract" onClick={this.handleOperator}>-</button>
          </div>
        </div>
        <div className="row no-gutters text-center">
          <div className="col-sm"><button className="btn btn-dark" id="one" onClick={this.handleNumber}>1</button>
          </div>
          <div className="col-sm"><button className="btn btn-dark" id="two" onClick={this.handleNumber}>2</button>
          </div>
          <div className="col-sm"><button className="btn btn-dark" id="three" onClick={this.handleNumber}>3</button>
          </div>
          <div className="col-sm"><button className="btn btn-dark" id="add" onClick={this.handleOperator}>+</button>
          </div>
        </div>
        <div className="row no-gutters text-center">
          <div className="col-sm-3"><button className="btn btn-dark" id="zero" onClick={this.handleNumber}>0</button>
          </div>
          <div className="col-sm-3"><button className="btn btn-dark" id="decimal" onClick={this.handleDecimal}>.</button>
          </div>
          <div className="col-sm-3"><button className="btn btn-success" id="equals" onClick={this.handleEqual}>=</button>
          </div>
        </div>
      </div>
    )
  }
}

ReactDOM.render(<Calculator />, document.getElementById('app'));
          